/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    FieldDefAddDTO,
    FieldDefAddDTOFromJSON,
    FieldDefAddDTOToJSON,
    ReplyVOFieldDefShowVO,
    ReplyVOFieldDefShowVOFromJSON,
    ReplyVOFieldDefShowVOToJSON,
    ReplyVOPageVOFieldDefListVO,
    ReplyVOPageVOFieldDefListVOFromJSON,
    ReplyVOPageVOFieldDefListVOToJSON,
} from '../models';

export interface DeleteBatchUsingDELETERequest {
    body?: string;
}

export interface ListUsingGETRequest {
    createdBy?: string;
    createdTimeEnd?: Date;
    createdTimeStart?: Date;
    deleted?: boolean;
    description?: string;
    endIndex?: number;
    fieldId?: string;
    fieldName?: string;
    operatedBy?: string;
    operatedTimeEnd?: Date;
    operatedTimeStart?: Date;
    pageNo?: number;
    pageSize?: number;
    startIndex?: number;
    tableId?: string;
    type?: string;
}

export interface UpdateUsingPUTRequest {
    body?: string;
}

/**
 * 
 */
export class APIApi extends runtime.BaseAPI {

    /**
     * 批量删除
     */
    async deleteBatchUsingDELETERaw(requestParameters: DeleteBatchUsingDELETERequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FieldDefAddDTO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/datamap/fieldDef`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FieldDefAddDTOFromJSON(jsonValue));
    }

    /**
     * 批量删除
     */
    async deleteBatchUsingDELETE(requestParameters: DeleteBatchUsingDELETERequest, initOverrides?: RequestInit): Promise<FieldDefAddDTO> {
        const response = await this.deleteBatchUsingDELETERaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 分页查询【表字段信息】
     */
    async listUsingGETRaw(requestParameters: ListUsingGETRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReplyVOPageVOFieldDefListVO>> {
        const queryParameters: any = {};

        if (requestParameters.createdBy !== undefined) {
            queryParameters['createdBy'] = requestParameters.createdBy;
        }

        if (requestParameters.createdTimeEnd !== undefined) {
            queryParameters['createdTimeEnd'] = (requestParameters.createdTimeEnd as any).toISOString();
        }

        if (requestParameters.createdTimeStart !== undefined) {
            queryParameters['createdTimeStart'] = (requestParameters.createdTimeStart as any).toISOString();
        }

        if (requestParameters.deleted !== undefined) {
            queryParameters['deleted'] = requestParameters.deleted;
        }

        if (requestParameters.description !== undefined) {
            queryParameters['description'] = requestParameters.description;
        }

        if (requestParameters.endIndex !== undefined) {
            queryParameters['endIndex'] = requestParameters.endIndex;
        }

        if (requestParameters.fieldId !== undefined) {
            queryParameters['fieldId'] = requestParameters.fieldId;
        }

        if (requestParameters.fieldName !== undefined) {
            queryParameters['fieldName'] = requestParameters.fieldName;
        }

        if (requestParameters.operatedBy !== undefined) {
            queryParameters['operatedBy'] = requestParameters.operatedBy;
        }

        if (requestParameters.operatedTimeEnd !== undefined) {
            queryParameters['operatedTimeEnd'] = (requestParameters.operatedTimeEnd as any).toISOString();
        }

        if (requestParameters.operatedTimeStart !== undefined) {
            queryParameters['operatedTimeStart'] = (requestParameters.operatedTimeStart as any).toISOString();
        }

        if (requestParameters.pageNo !== undefined) {
            queryParameters['pageNo'] = requestParameters.pageNo;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['pageSize'] = requestParameters.pageSize;
        }

        if (requestParameters.startIndex !== undefined) {
            queryParameters['startIndex'] = requestParameters.startIndex;
        }

        if (requestParameters.tableId !== undefined) {
            queryParameters['tableId'] = requestParameters.tableId;
        }

        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/datamap/fieldDef`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReplyVOPageVOFieldDefListVOFromJSON(jsonValue));
    }

    /**
     * 分页查询【表字段信息】
     */
    async listUsingGET(requestParameters: ListUsingGETRequest, initOverrides?: RequestInit): Promise<ReplyVOPageVOFieldDefListVO> {
        const response = await this.listUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 修改
     */
    async updateUsingPUTRaw(requestParameters: UpdateUsingPUTRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReplyVOFieldDefShowVO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/datamap/fieldDef`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReplyVOFieldDefShowVOFromJSON(jsonValue));
    }

    /**
     * 修改
     */
    async updateUsingPUT(requestParameters: UpdateUsingPUTRequest, initOverrides?: RequestInit): Promise<ReplyVOFieldDefShowVO> {
        const response = await this.updateUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
