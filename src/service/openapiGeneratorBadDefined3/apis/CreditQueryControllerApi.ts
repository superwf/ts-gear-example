/* tslint:disable */
/* eslint-disable */
/**
 * 接口文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 67890211@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DataTransOutput,
    DataTransOutputFromJSON,
    DataTransOutputToJSON,
    ResultListMap,
    ResultListMapFromJSON,
    ResultListMapToJSON,
} from '../models';

export interface GetAllMsgForMapUsingPOSTRequest {
    accountTime: string;
    type: string;
}

export interface PastCreditCardBillGatherUsingPOSTRequest {
    body: ;
}

/**
 * 
 */
export class CreditQueryControllerApi extends runtime.BaseAPI {

    /**
     * 站址经营-汇总首页
     */
    async getAllMsgForMapUsingPOSTRaw(requestParameters: GetAllMsgForMapUsingPOSTRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ResultListMap>> {
        if (requestParameters.accountTime === null || requestParameters.accountTime === undefined) {
            throw new runtime.RequiredError('accountTime','Required parameter requestParameters.accountTime was null or undefined when calling getAllMsgForMapUsingPOST.');
        }

        if (requestParameters.type === null || requestParameters.type === undefined) {
            throw new runtime.RequiredError('type','Required parameter requestParameters.type was null or undefined when calling getAllMsgForMapUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.accountTime !== undefined) {
            queryParameters['accountTime'] = requestParameters.accountTime;
        }

        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/zzjy/all-msg/getAllMsgForMap`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResultListMapFromJSON(jsonValue));
    }

    /**
     * 站址经营-汇总首页
     */
    async getAllMsgForMapUsingPOST(requestParameters: GetAllMsgForMapUsingPOSTRequest, initOverrides?: RequestInit): Promise<ResultListMap> {
        const response = await this.getAllMsgForMapUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 往期账单汇总
     * 往期账单汇总
     */
    async pastCreditCardBillGatherUsingPOSTRaw(requestParameters: PastCreditCardBillGatherUsingPOSTRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DataTransOutput>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling pastCreditCardBillGatherUsingPOST.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json;charset=UTF-8';

        const response = await this.request({
            path: `/api/core/asset/credit/query/pastCreditCardBillGather`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DataTransOutputFromJSON(jsonValue));
    }

    /**
     * 往期账单汇总
     * 往期账单汇总
     */
    async pastCreditCardBillGatherUsingPOST(requestParameters: PastCreditCardBillGatherUsingPOSTRequest, initOverrides?: RequestInit): Promise<DataTransOutput> {
        const response = await this.pastCreditCardBillGatherUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
